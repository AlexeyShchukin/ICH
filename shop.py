""" ===================================================================================================
4. Есть магазин по продаже мороженого. Одна порция стоит 5 евро.
В кассе на момент открытия магазина - 0 евро.
В магазин выстраивается очередь покупателей, у которых есть одна купюра, чтобы оплатить порцию мороженого.

Задача: зная купюры всех покупателей в очереди (конечного размера), понять, получится ли продать мороженое всем
(для этого надо иметь достаточно купюр, чтобы давать сдачу), или не получится.

Существуют купюры следующего номинала: 5, 10, 20, 50 евро.
Напишите функцию, которая принимает список с купюрами покупателей.
Например, если очередь имеет купюры [5, 10, 5, 20], то функция вернет true
(первому покупателю продадут мороженое за 5,
со второго возьмут 10 и дадут сдачу 5,
третьему дадут мороженое за 5,
с четвертого возьмут 20 евро и дадут сдачу 15 купюрами 10 и 5 которые есть в кассе).

Подсказка: кассу можно представить в виде списка, отсортированного по возрастанию.
Когда нужно понять, можно ли дать сдачу, то мы перебираем список кассы и суммируем банкноты в нём.
Если они могут в сумме дать сдачу, то мы их убираем из списка, добавляем банкноту,
которой платили, пересортировываем, и так далее).
"""
from bisect import insort


def is_change_exist(cashbox: list, change: int) -> bool:
    if sum(cashbox) < change:  # если в кассе меньше, чем нужно сдачи
        return False

    for i in range(len(cashbox) - 1, -1, -1):  # проверяем купюры в касе, начиная с самых больших
        if cashbox[i] == change:  # если купюра равна сдаче
            cashbox.pop(i)  # забираем купюру и заканчиваем проверку кассы
            return True
        elif cashbox[i] > change:  # если купюра больше нужной сдачи
            continue  # переходим к следующей купюре в кассе
        else:  # если купюра меньше нужной сдачи
            change -= cashbox[i]  # уменьшаем сдачу, забрав из кассы купюру
            cashbox.pop(i)
    return not change  # если сдача равна нулю, значит мы нашли в кассе нужное количество купюр для нее


def can_sell_icecream(queue: list[int]) -> bool:
    cashbox = []  # касса
    for banknote in queue:
        ch = banknote - 5  # сдача с банкноты
        if is_change_exist(cashbox, ch):  # если есть сдача, забираем ее с кассы
            insort(cashbox, banknote)  # кладём в кассу банкноту покупателя в порядке возрастания
        else:
            return False
    return True


print(can_sell_icecream([5, 10, 10]))  # False
print(can_sell_icecream([5, 5, 10, 10]))  # True
print(can_sell_icecream([5, 10, 5, 20]))  # True
print(can_sell_icecream([50, 10, 5, 20, 10, 10, 5, 5, 5]))  # False
print(can_sell_icecream([50, 10, 5, 20, 10, 10, 5, 5, 5, 5]))  # False
