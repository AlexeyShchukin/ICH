# 1. Дана строка с именем, например, “Иван”. Написать программу,
# которая печатает приветствие, например, “Привет, Иван!”.
from pickletools import string1

string = "Иван"
print(f"Привет {string}!")

# 2. Веб-страницы состоят из строк типа "<i>Yay</i>" - выводит текст Yay курсивом.
# В этом примере, строка-тег “i” означает <i> и </i>, которые окружают слово Yay.
# Нам дана строка-тэг и текст.
# Написать программу, которая выводит тег вокруг данного текста,
# например,  "<i>Yay</i>". Например, ('i', 'Hello') → '<i>Hello</i>'.

teg = "i"
string = "Hello"
print(f"<{teg}>{string}</{teg}>")

# 3. Дана строка. Написать программу, которая создает строку
# из трех копий последних двух символов данной строки.
# Данная строка должна быть длиной минимум 2.
# (('Hello') → 'lololo'), ('ab') → 'ababab'.

string = "Hello"
print(string[-2:] * 3)

# 4. Дана строка, написать программу, которая печатает строку без первого и последнего
# символа от данной строки, например, “Иван” - “ва”. “Python” -> “ytho”.

string = "Иван"
print(string[1:-1])

# 5. Даны две строки разной длины (одна может быть пустой). Написать программу,
# которая печатает строку вида короткая+длинная+короткая,
# где короткая строка снаружи длинной.
# Например, 'Hello', 'hi' → 'hiHellohi'.

string1 = "Hello"
string2 = "hi"
print(string2 + string1 + string2 if len(string1) < len(string2) else string1 + string2 + string1)

# 6. Написать программу, которая печатает True,
# если слова “cat” и “dog” встречаются в строке одинаковое количество раз
# (и напечатать False - если разное количество раз).
# 'catdog' → True, 'catcat' → False, '1cat1cadodog' → True
# Важно: запрещено использовать методы count() и replace()

string = "1cat1cadodog"
cats = 0
dogs = 0

i = 0
while i < len(string) - 2:
    if string[i:i+3] == "cat":
        cats += 1
        i += 3
    elif string[i:i+3] == "dog":
        dogs += 1
        i += 3
    else:
        i += 1

print(cats == dogs)

# 7. Написать программу, которая печатает количество вхождений данной подстроки в строку.
# Например, для подстроки hi, 'abc hi ho' → 1,
# для подстроки “well”,  'ABCwell well') → 2.
# Важно: запрещено использование метода count()

string = "ABCwell well"
substring = "well"
counter = 0
while substring in string:
    counter += 1
    string = string[string.index(substring) + len(substring):]
print(counter)

# 8. Для данной строки, напечатать строку, где каждый символ повторяется дважды,
# например, 'The' → 'TThhee', 'AAbb' → 'AAAAbbbb'.
# Подсказка: перебрать i по каждому значению индекса в строке 0, 1, 2, .. len-1.

string = "The"
i = 0
while i < len(string):
    print(string[i] * 2, end='')
    i += 1

print()
# 9. Написать программу, которая по заданной длине катетов прямоугольного треугольника
# вычисляет длину гипотенузы.
# Поменяйте программу так, чтобы длина гипотенузы выводилась
# с точностью до двух знаков после запятой.

a = 5
b = 6
c = (a ** 2 + b ** 2) ** 0.5
print(f'{c:.2f}')

# 10. Написать программу, которая по данному радиусу вычисляет:
# длину окружности (2pi*r), площадь круга (pi * r ^ 2), объем шара (4/3)*pi*r^3).
from math import pi


r = 4
print(f"""
Длина окружности: {2 * pi * r:.2f},
Площадь круга: {pi * r ** 2:.2f},
Объем шара: {(4 / 3) * pi * r ** 3:.2f}""")
